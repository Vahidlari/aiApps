version: '3.8'

services:
  # Database Management Service
  database-management:
    build:
      context: ..
      dockerfile: config/Dockerfile.management
    image: database-management:latest
    container_name: database-management
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ..:/app
    working_dir: /app
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    profiles:
      - management
    command: ["tail", "-f", "/dev/null"]  # Keep container running for management tasks

  # Transformers inference API for text2vec-transformers
  t2v-transformers:
    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    container_name: ${TRANSFORMERS_CONTAINER_NAME:-t2v-transformers}
    environment:
      ENABLE_CUDA: ${ENABLE_CUDA:-0}
    ports:
      - "${TRANSFORMERS_PORT:-8081}:8080"
    restart: ${TRANSFORMERS_RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: ${TRANSFORMERS_HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${TRANSFORMERS_HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${TRANSFORMERS_HEALTH_CHECK_RETRIES:-5}
      start_period: ${TRANSFORMERS_HEALTH_CHECK_START_PERIOD:-60s}

  weaviate:
    image: semitechnologies/weaviate:${WEAVIATE_VERSION:-1.23.7}
    container_name: ${WEAVIATE_CONTAINER_NAME:-weaviate}
    ports:
      - "${WEAVIATE_PORT:-8080}:8080"
    environment:
      # Authentication settings
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=${AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED:-true}
      - AUTHENTICATION_APIKEY_ENABLED=${AUTHENTICATION_APIKEY_ENABLED:-false}
      - AUTHENTICATION_APIKEY_ALLOWED_KEYS=${AUTHENTICATION_APIKEY_ALLOWED_KEYS:-}
      - AUTHENTICATION_APIKEY_USERS=${AUTHENTICATION_APIKEY_USERS:-}
      
      # Persistence settings
      - PERSISTENCE_DATA_PATH=${PERSISTENCE_DATA_PATH:-/var/lib/weaviate}
      
      # Modules configuration
      - ENABLE_MODULES=${ENABLE_MODULES:-text2vec-transformers,text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,qna-openai}
      
      # Transformers inference API configuration
      - TRANSFORMERS_INFERENCE_API=${TRANSFORMERS_INFERENCE_API:-http://t2v-transformers:8080}
      
      # Cluster settings
      - CLUSTER_HOSTNAME=${CLUSTER_HOSTNAME:-node1}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
      
      # Additional environment variables will be added by the script if needed
    volumes:
      - ${WEAVIATE_VOLUME_NAME:-weaviate_data}:${PERSISTENCE_DATA_PATH:-/var/lib/weaviate}
    restart: ${WEAVIATE_RESTART_POLICY:-unless-stopped}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: ${HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${HEALTH_CHECK_TIMEOUT:-10s}
      retries: ${HEALTH_CHECK_RETRIES:-5}
      start_period: ${HEALTH_CHECK_START_PERIOD:-40s}
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-2g}
          cpus: ${CPU_LIMIT:-1}

volumes:
  weaviate_data:
    driver: local
