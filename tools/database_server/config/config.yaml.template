# Weaviate Server Configuration Template
# Copy this file to config.yaml and modify as needed

# Server Configuration
server:
  # Weaviate version to use --> recommended to use versions above 1.25 to support V4 APIs
  version: "1.32.9"
  
  # Port mapping (host:container)
  port: 8080
  
  # Container name
  container_name: "weaviate"
  
  # Restart policy: no, always, on-failure, unless-stopped
  restart_policy: "unless-stopped"

# Authentication Configuration
authentication:
  # Enable anonymous access (recommended for development)
  anonymous_access_enabled: true
  
  # API Key authentication (optional)
  api_key_enabled: false
  api_key_allowed_keys: []
  api_key_users: []

# Persistence Configuration
persistence:
  # Data path inside container
  data_path: "/var/lib/weaviate"
  
  # Volume name for data persistence
  volume_name: "weaviate_data"

# Modules Configuration
modules:
  # List of enabled modules
  enabled: [
    "text2vec-transformers",
    "text2vec-cohere",
    "text2vec-huggingface", 
    "text2vec-palm",
    "text2vec-openai",
    "generative-openai",
    "qna-openai"
  ]

# Transformers Inference API Configuration
transformers:
  # Inference API URL for text2vec-transformers
  inference_api: "http://t2v-transformers:8080"
  
  # Container name for the transformers service
  container_name: "t2v-transformers"
  
  # Port mapping for transformers service
  port: 8081
  
  # Restart policy for transformers service
  restart_policy: "unless-stopped"
  
  # Enable CUDA acceleration (set to 1 if you have GPU support)
  enable_cuda: 0
  
  # Health check configuration
  health_check:
    enabled: true
    interval: 30
    timeout: 10
    retries: 5
    start_period: 60

# Cluster Configuration
cluster:
  hostname: "node1"

# Health Check Configuration
health_check:
  # Enable health checks
  enabled: true
  
  # Check interval in seconds
  interval: 30
  
  # Timeout in seconds
  timeout: 10
  
  # Number of retries
  retries: 5
  
  # Start period in seconds
  start_period: 40

# Logging Configuration
logging:
  level: "INFO"
  format: "json"

# Resource Limits (optional)
resources:
  memory_limit: null
  cpu_limit: null

# Environment Variables (additional)
environment: {}
  # Add any additional environment variables here
  # Example:
  # CUSTOM_VAR: "value"
  # DEBUG: "true"
